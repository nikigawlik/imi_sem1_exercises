#BlueJ class context
comment0.params=levelNumber
comment0.target=Level(int)
comment0.text=\n\ Constructor\ for\ a\ Level.\n
comment1.params=
comment1.target=int\ getLevelNumber()
comment1.text=\n\ Returns\ the\ level\ number.\n
comment10.params=levelFile
comment10.target=Level[]\ parseLevelsFromFile(java.lang.String)
comment10.text=\n\ Parses\ all\ the\ Levels\ from\ the\ specified\ Level\ File.\n\ \n\ @return\ the\ levels\ as\ an\ array\n
comment11.params=actors\ levelNumber\ password
comment11.target=Level\ createLevelFromActors(java.util.List,\ int,\ java.lang.String)
comment11.text=\n\ Creates\ a\ Level\ from\ all\ the\ actors\ in\ the\ list.\n\ \n\ @return\ the\ level\n
comment2.params=
comment2.target=java.lang.String\ getLevelPassword()
comment2.text=\n\ Returns\ the\ level\ password.\n
comment3.params=x\ y
comment3.target=char\ getActorTypeAt(int,\ int)
comment3.text=\n\ Returns\ the\ actor\ type\ as\ character\ (see\ class\ description).\n
comment4.params=
comment4.target=greenfoot.GreenfootImage\ toImage()
comment4.text=\n\ Returns\ an\ image\ representation\ of\ this\ level\ with\ all\ the\ actors.\n
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\n\ Returns\ a\ String\ representation\ of\ this\ level.\n
comment6.params=o
comment6.target=boolean\ equals(java.lang.Object)
comment6.text=\n\ Returns\ true\ if\ the\ level\ actor\ positions\ are\ equal.\n
comment7.params=
comment7.target=char[][]\ getActorPositions()
comment7.text=\n\ Returns\ the\ actor\ positions.\n
comment8.params=x\ y\ actorType
comment8.target=void\ setActorTypeAt(int,\ int,\ char)
comment8.text=\n\ Set\ the\ actor\ type\ at\ the\ specified\ position.\n
comment9.params=levelPassword
comment9.target=void\ setLevelPassword(java.lang.String)
comment9.text=\n\ Set\ the\ level\ password.\n
numComments=12
