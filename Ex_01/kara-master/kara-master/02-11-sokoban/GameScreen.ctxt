#BlueJ class context
comment0.params=
comment0.target=GameScreen()
comment0.text=\n\ Constructor\ for\ World.\n
comment1.params=
comment1.target=void\ started()
comment1.text=\n\ This\ method\ is\ called\ by\ the\ Greenfoot\ system\ when\ the\ execution\ has\ started.\n
comment10.params=
comment10.target=ScreenState\ getHighscoreState()
comment10.text=\n\ Returns\ the\ highscore\ screen\ state.\n
comment11.params=
comment11.target=void\ showDefaultBackground()
comment11.text=\n\ Shows\ the\ default\ background\ image\ that\ was\ chosen\ for\ this\ Class.\n
comment12.params=
comment12.target=Level[]\ getAllLevels()
comment12.text=\n\ Returns\ all\ the\ levels.\n
comment13.params=
comment13.target=int\ getNumberOfLevels()
comment13.text=\n\ Returns\ the\ total\ number\ of\ levels.\n
comment14.params=currentLevelNumber
comment14.target=void\ setCurrentLevelNumber(int)
comment14.text=\n\ Sets\ the\ level\ number\ for\ the\ current\ level.\n
comment15.params=
comment15.target=int\ getCurrentLevelNumber()
comment15.text=\n\ Returns\ the\ level\ number\ for\ the\ current\ level.\n
comment16.params=
comment16.target=Level\ getCurrentLevel()
comment16.text=\n\ Returns\ the\ current\ level.\n
comment17.params=levelNumber
comment17.target=Level\ getLevel(int)
comment17.text=\n\ Returns\ the\ level\ with\ the\ specified\ number.\n
comment18.params=
comment18.target=int\ getNumberOfMoves()
comment18.text=\n\ Returns\ the\ number\ of\ moves\ that\ were\ made.\n
comment19.params=moves
comment19.target=void\ setNumberOfMoves(int)
comment19.text=\n\ Sets\ the\ number\ of\ moves.\n
comment2.params=state
comment2.target=void\ setState(ScreenState)
comment2.text=\n\ Sets\ and\ initializes\ the\ specified\ screen\ state.\n\ Before\ the\ new\ screen\ is\ initialized,\ all\ objects\ in\ the\ world\ are\ removed.\n\ \n\ @param\ \ \ state\ the\ new\ state\ of\ the\ screen\n
comment20.params=
comment20.target=boolean\ isLevelComplete()
comment20.text=\n\ Returns\ true\ if\ the\ current\ level\ is\ complete.\n
comment21.params=levelComplete
comment21.target=void\ setLevelComplete(boolean)
comment21.text=\n\ Sets\ whether\ the\ current\ level\ is\ complete.\n
comment22.params=
comment22.target=boolean\ isGameComplete()
comment22.text=\n\ Returns\ whether\ the\ game\ is\ complete,\ i.e.\ the\ last\ level\ is\ completed.\n\ \n\ @return\ true\ if\ the\ game\ is\ complete\n
comment23.params=
comment23.target=boolean\ isHighscoreAvailable()
comment23.text=\n\ Returns\ if\ the\ highscore\ is\ enabled\ and\ available.\n
comment24.params=
comment24.target=boolean\ isHighscoreReadOnly()
comment24.text=\n\ Returns\ if\ the\ highscore\ is\ enabled\ and\ available.\n
comment25.params=
comment25.target=java.lang.String\ getPlayerName()
comment25.text=\n\ Returns\ the\ name\ of\ the\ current\ player\ or\ empty\ String\ if\ none\ has\ been\ set.\n
comment26.params=playerName
comment26.target=void\ setPlayerName(java.lang.String)
comment26.text=\n\ Sets\ the\ name\ of\ the\ current\ player.\ (Will\ be\ ignored\ if\ ServerHighscore\ is\n\ used\ since\ the\ username\ of\ UserInfo\ is\ used).\n
comment27.params=
comment27.target=boolean\ canSetPlayerName()
comment27.text=\n\ Returns\ true\ if\ the\ name\ of\ the\ current\ player\ can\ be\ set.\n
comment28.params=
comment28.target=Highscore\ getHighscoreForCurrentLevel()
comment28.text=\n\ Returns\ the\ Highscore\ for\ the\ current\ level.\n\ May\ be\ null.\n
comment29.params=levelNumber
comment29.target=Highscore\ getHighscoreForLevel(int)
comment29.text=\n\ Returns\ the\ Highscore\ for\ the\ specified\ level.\n
comment3.params=state\ clearWorld
comment3.target=void\ setState(ScreenState,\ boolean)
comment3.text=\n\ Sets\ and\ initializes\ the\ specified\ screen\ state.\n\ \n\ @param\ \ \ state\ the\ new\ state\ of\ the\ screen\n\ @param\ \ \ clearWorld\ if\ true,\ all\ objects\ in\ the\ world\ are\ removed\ before\ the\ new\ state\n\ \ \ \ \ \ \ \ \ \ is\ initialized.\n
comment30.params=highscore
comment30.target=void\ setHighscore(Highscore)
comment30.text=\n\ Sets\ the\ specified\ Highscore.\n
comment31.params=
comment31.target=void\ generateASCIILevel()
comment31.text=\n\ Generates\ a\ level\ definition\ from\ all\ the\ actors\ currently\ in\ the\ world\ and\ prints\ it\n\ to\ system\ out.\ \n\ <p>\n\ Usage\:\ Drag\ and\ Drop\ the\ Actors\ into\ the\ World,\ then\ call\ this\ method\ on\ the\ world\ to\ get\ \n\ the\ level\ as\ ASCII\ text.\ <br>\n\ This\ level\ definition\ can\ then\ be\ copied\ into\ a\ level\ text\ file.\n
comment32.params=
comment32.target=void\ act()
comment32.text=\n\ The\ act\ method\ is\ called\ by\ the\ greenfoot\ framework\ at\ each\ action\ step.\ \n\ The\ world's\ act\ method\ is\ called\ before\ the\ act\ method\ of\ any\ objects\ in\ \n\ the\ world.\ \n\ <p>\n\ Delegates\ act\ to\ the\ current\ state.\n
comment33.params=defaultImage\ onTargetPostfix
comment33.target=greenfoot.GreenfootImage\ findOnTargetImage(greenfoot.GreenfootImage,\ java.lang.String)
comment33.text=\n\ Retrieves\ the\ filename\ of\ the\ default\ image\ and\ adds\ the\ on-target\ postfix\ to\n\ the\ filename\ to\ load\ the\ on-target-image.\n\ If\ the\ on\ target\ image\ cannot\ be\ found,\ the\ default\ image\ is\ returned.\n
comment4.params=
comment4.target=ScreenState\ getStartState()
comment4.text=\n\ Returns\ the\ start\ screen\ state.\n
comment5.params=
comment5.target=ScreenState\ getEnterNameState()
comment5.text=\n\ Returns\ the\ enter\ name\ screen\ state.\n
comment6.params=
comment6.target=ScreenState\ getLevelSplashState()
comment6.text=\n\ Returns\ the\ level\ splash\ screen\ state.\n
comment7.params=
comment7.target=ScreenState\ getGameState()
comment7.text=\n\ Returns\ the\ game\ screen\ state.\n
comment8.params=
comment8.target=ScreenState\ getLevelCompleteState()
comment8.text=\n\ Returns\ the\ level\ complete\ screen\ state.\n
comment9.params=
comment9.target=ScreenState\ getGameCompleteState()
comment9.text=\n\ Returns\ the\ game\ complete\ screen\ state.\n
numComments=34
